version: 2.1

orbs:
  slack: circleci/slack@4.1.1
  aws-assume-role: holdaraffle/aws-assume-role@0.0.10
  aws-sam: circleci/aws-sam-serverless@2.1.0
  #aws-cli: circleci/aws-cli@1.3.0
  
executors:
  alpine:
    resource_class: xlarge
    working_directory: /root/www    
    docker:
      - image: avatarnewyork/circleci-alpine:v4
    environment:
      BASH_ENV: "~/.bashrc"

  python_test:
    resource_class: xlarge
    docker:
      - image: circleci/python:3.7.9
    environment:
      BASH_ENV: "~/.bashrc"    
    
      
  default:
    resource_class: large
    working_directory: /root/www    
    docker:
      - image: buildpack-deps:jessie

commands:
  aws-sam-assume-role:
    description: install aws sam and assume role
    #executor: aws-sam/default    
    steps:
      #- checkout
      - aws-sam/install
      - aws-assume-role/assume_role:
          account: $AWS_ACCOUNT_ID
          role: $AWS_ASSUME_ROLE_NAME          
    
jobs:
  build:
    executor: aws-sam/default
    steps:
      - checkout      
      - aws-sam-assume-role
      - aws-sam/build:
          template: template.yaml            
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - ./

  test:
    executor: python_test
    steps:
      - attach_workspace:
          at: /home/circleci/project      
      - run: cd /home/circleci/project && mkdir -p test-results
      - run:  pip3 install -r tests/unit/requirements.txt
      - run: pytest --junitxml=test-results/junit.xml -v tests        
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results   
        
  deploy:
    executor: aws-sam/default    
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - aws-sam-assume-role          
      - when:
          condition:
            not: 
              equal: ["", $CIRCLE_TAG]
          steps:
            - run: echo "stage"
            - run: sam package --s3-bucket=$S3_BUCKET --s3-prefix=sam-media-convert --template-file=template.yaml --output-template-file=packaged.yaml --profile=default --region=us-west-2 --metadata SemanticVersion=$CIRCLE_TAG
            - run: sam publish --template-file packaged.yaml --profile=default --region=us-west-2 --semantic-version=$CIRCLE_TAG              
            - run: mkdir -p package_artifacts && cp packaged*.yaml package_artifacts
            - store_artifacts:
                path: package_artifacts   
                
          
workflows:
  version: 2  
  build-test-deploy:
    jobs:
      - build:
          context: org-global
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - stage
                - circleci
                - master

      - test:
          context: org-global
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - stage
                - circleci
                - master
                
      - deploy:
          context: org-global
          requires:
            - test
          filters:
            tags:
              only: /.*/
